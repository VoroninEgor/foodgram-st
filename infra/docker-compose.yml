version: '3.3'
services:

  db:
    container_name: foodgram-db
    image: postgres:13.10
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env

  backend:
    container_name: foodgram-backend
    build:
      context: ../backend
      dockerfile: Dockerfile
    volumes:
      - ../backend/:/app
      - static_content:/app/collected_static
      - ../backend/media/:/app/media/
    command: >
      sh -c "python manage.py migrate &&
             gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000"
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=foodgram.settings
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    env_file:
      - .env

  frontend:
    container_name: foodgram-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_content:/var/www/foodgram/static/
      - ../backend/media/:/var/www/foodgram/media/
    depends_on:
      - frontend
      - backend

volumes:
  pg_data:
  static_content:
